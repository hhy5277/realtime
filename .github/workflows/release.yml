name: Release

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+*"

jobs:
  release:
    defaults:
      run:
        working-directory: ./server

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Elixir
        uses: actions/setup-elixir@v1
        with:
          elixir-version: 1.10.x
          otp-version: 22.x

      - name: Get the version
        id: get_version
        run: echo ::set-output name=version::${GITHUB_REF#refs/tags/}

      - name: Prepare release
        run: |
          mix deps.get
          mix compile
          mix release
          tar -czf realtime-${{ steps.get_version.outputs.version }}-x86_64-linux-gnu.tar.gz -C ./_build/prod/rel realtime
        env:
          MIX_ENV: prod

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}

      - name: Upload release assets
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./server/realtime-${{ steps.get_version.outputs.version }}-x86_64-linux-gnu.tar.gz
          asset_name: realtime-${{ steps.get_version.outputs.version }}-x86_64-linux-gnu.tar.gz
          asset_content_type: application/gzip

      - name: Upload build to Docker Hub
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: supabase/realtime
          tag_with_ref: true
